apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /admin-server
  labels:
    app: api-gateway
spec:
  type: NodePort
  ports:
  - nodePort: 31797
    port: 9015
    targetPort: 80
    protocol: TCP
  selector:
    app: api-gateway

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: api-gateway-v2
  namespace: default
data:
  application.properties: |-
    server.port: 9015
    server.servlet.contextPath: /admin-server
    spring.application.name: admin-server

    management.endpoint.health.show-details: always
    management.endpoints.web.exposure.include: *

    spring.mail.host: smtp.gmail.com
    spring.mail.port: 587
    spring.boot.admin.notify.mail.to: shubham.sharma@decimal.co.in,vikas.dhillon@decimal.co.in,ashish.kumar@decimal.co.in
    spring.boot.admin.notify.mail.enabled: false
    spring.boot.admin.notify.mail.from: VAHANA-DEV<tpg-alerts@decimal.co.in>
    spring.mail.username: tpg-alerts@decimal.co.in
    spring.mail.password: decimal@123

    spring.mail.protocol: smtp
    spring.mail.test-connection: false
    spring.mail.properties.mail.smtp.starttls.enable: true
    spring.mail.smtp.auth: false
    #spring.mail.properties.timeout=1000

    spring.security.user.name: admin
    spring.security.user.password: admin

    spring.boot.admin.notify.slack.enabled: true
    spring.boot.admin.notify.slack.webhook-url: https://hooks.slack.com/services/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
    spring.boot.admin.notify.slack.message: *#{instance.registration.name}* (#{instance.id}) is *#{event.statusInfo.status}*. Instance management URL is: *#{instance.registration.managementUrl}* and Health Url is: *#{instance.registration.healthUrl}* for environment *#{instance.tags.values.environment}* and client *#{instance.tags.values.client}*

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:

  replicas: 1
  selector:
    matchLabels:
      app: api-gateway-test
  template:
    metadata:
      labels:
        app:  api-gateway-test
    spec:
      containers:
      - name: api-gateway-test
        image: 712693083859.dkr.ecr.ap-south-1.amazonaws.com/tpg-admin-server:jenkins-build-1.0.58
        ports:
        - containerPort: 9015
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 200m
        volumeMounts:
        - mountPath: /app/
          name: api-gateway-volume    
      restartPolicy: Always
      imagePullSecrets:
      - name: aws-ecr-4
        
      
      volumes:
      - configMap:
          name: api-gateway-v2
        name: api-gateway-volume


       
---


apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-test
#  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway-test
  minReplicas: 1
  maxReplicas: 3
  
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
