apiVersion: v1
kind: Service
metadata:
  name: router
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /router
  labels:
    app: router
spec:
  ports:
    -  port: 9000
       targetPort: 9000
       protocol: TCP
  selector:
    app: router

---


kind: ConfigMap
apiVersion: v1
metadata:
  name: router
data:
  application.properties: |-

    spring.application.name=router

    server.port=9000

    server.compression.enabled=true
    server.compression.min-response-size=1KB
    server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

    server.servlet.context-path=/router

    eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka/
    eureka.instance.prefer-ip-address=true
    eureka.instance.lease-renewal-interval-in-seconds=2
    eureka.instance.lease-expiration-duration-in-seconds=5
    eureka.client.registry-fetch-interval-seconds=5

    feign.client.config.default.connectTimeout= 160000000
    feign.client.config.default.readTimeout= 160000000

    feign.client.config.default.logger-level=FULL


    spring.servlet.multipart.enabled=true
    # Threshold after which files are written to disk.
    spring.servlet.multipart.file-size-threshold=1000MB
    # Max file size.
    spring.servlet.multipart.max-file-size=1000MB
    # Max Request Size
    spring.servlet.multipart.max-request-size=1000MB

    # Add Micrometer Config
    management.endpoint.metrics.enabled=true
    management.endpoints.web.exposure.include=*
    management.endpoint.prometheus.enabled=true
    management.endpoint.health.show-details=always
    management.metrices.export.prometheus.enabled=true

    #metricsName=api-gateway

    isHttpTracingEnabled=true
    host=172.30.0.215
    service=api-gateway
    region=dev

    logging-agent-url=logging-agent:9051






---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: router
  name: router
spec:

  replicas: 1
  selector:
    matchLabels:
      app: router
  template:
    metadata:
      labels:
        app: router
    spec:
      containers:
        - name: router
          image: 712693083859.dkr.ecr.ap-south-1.amazonaws.com/project_value
          ports:
            - containerPort: 9000
          imagePullPolicy: Always
          #resources:
            #requests:
              #cpu: 200m
          volumeMounts:
            - mountPath: /usr/deployment/
              name: router-volume
      restartPolicy: Always
      imagePullSecrets:
        - name: awslogin


      volumes:
        - configMap:
            name: router
          name: router-volume


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: router
spec:
  rules:
    - http:
        paths:
          - path: /router
            backend:
              serviceName: router
              servicePort: 9000

